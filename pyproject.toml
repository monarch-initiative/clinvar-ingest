[tool.poetry]
name = "clinvar_ingest"
version = "0.0.0"
description = "modular ingest for clinvar variants. Makes variant nodes and then creates associations based on the relative information (phenotype, disease, gene, pathogenicity)"
authors = ["Aaron Odell <aaron@tislab.org>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
importlib-metadata = ">=4.8.0"
koza = ">=0.6.0"
kghub-downloader = ">=0.3.8"
kgx = ">=2.4.0"
biolink-model = "^4.2.0"
duckdb = ">=0.10.2"
loguru = "*"
vcf-kit = "^0.2.9"
numpy = "^1.26.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = ">=8.1.1"
mkdocs = ">=1.4"
mkdocs-material = ">=9.5"
mkdocs-macros-plugin = "*"
black = "*"
ruff = "*"

[tool.poetry.scripts]
ingest = "clinvar_ingest.cli:app"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.ruff]
line-length = 120
ignore = [
    "D100", # `missing-module-docstring`
    "D101", # `missing-function-docstring`
    "D102", # `missing-method-docstring`
    "D103", # `missing-class-docstring`
    "D211", # `no-blank-line-before-class`
    "D212", # `multi-line-summary-first-line`
    "D203", # `blank-line-before-docstring`
    "F541", # f-strings with no placeholders
    "S101", # Use of assert detected
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# Select or ignore from https://beta.ruff.rs/docs/rules/
select = [
    "B", # bugbear
    "D", # pydocstyle
    "E", # pycodestyle errors
    "F", # Pyflakes
    "I", # isort
    "S", # flake8-bandit
    "W", # Warning
]
unfixable = []
target-version = "py310"

[tool.codespell]
skip = "*.po,*.ts,.git,pyproject.toml"
count = ""
quiet-level = 3
# ignore-words-list = ""

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
